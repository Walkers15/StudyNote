이것저것 적고싶은것들 끄적끄적

https:  // github.com   (:80)/                         Walkers15/StudyNote/new/master   [?id=HTML&page=12]
프로토콜   호스트(도메인) 포트(기본 서버 80 - 생략가능)    path(경로)                       쿼리 스트링(query string) - 원래 없는데 공부용으로 적음


쿼리 스트링은 ? 로 시작한다

https://nodejs.org/dist/latest-v12.x/docs/api/
nodejs 기본 모듈 설명서

url.parse(request.url, true); 했을때
pathname : 쿼리 스트링 없이 주소만 출력
path = 쿼리 포함 출려


HTML안에 자바스크립트 이벤트 핸들러 넣기
<element event="some JavaScript">
이벤트 참고 https://www.w3schools.com/jsref/dom_obj_event.asp
형태로 넣는다
예시) <button onclick="document.getElementById('demo').innerHTML = Date()">The time is?</button>


배열
var arr = ['A','B','C','D'];
값 추가
arr.push('E');

반복문

for in
var person = {fname:"John", lname:"Doe", age:25};

var text = "";
var x;
for (x in person) {
  text += person[x];
}

for of
var cars = ['BMW', 'Volvo', 'Mini'];
var x;

for (x of cars) {
  document.write(x + "<br >");
}

함수
function 함수이름(매개변수){
  ...
  return 리턴값;
}
자바스크립트 비동기식
비동기식이란?
특정 코드의 연산이 끝날 때 까지 그 코드를 기다려주지 않고,
다음 코드를 먼저 실행하는 형식을 말한다.
(동기식 : 코드 한줄 실행하면 그 코드 끝날때까지 기다림)
비동기식의 문제점
서버에서 데이터를 받아 출력하는 코드를 짠다고 가정하면,
출력하는 코드가 데이터를 받기도 전에 실행되어 제대로된 값을 띄울 수 없음

해결 방안
콜백 함수 사용.
콜백 함수는, 특정 조건이 만족될 때 실행되는 함수로, 서버에서 데이터를 받았을 때만 실행 등의 형식으로 비동기 문제를 해결할 수 있다.

객체의 반복
for반복문을 사용한다.
for(var n in 객체명){
  ..
}
//var roles = {'programmer':'egoing', 'designer' : 'k8805', 'manager' : 'hoya' }
var roles = { //객체의 프로퍼티 사이사이에는 세미콜론을 찍지 않는다!
  'programmer':'egoing',
  'designer' : 'k8805',
  'manager' : 'hoya'
};
console.log(roles.designer); //k8805
console.log(roles['designer']); //k8805
 
for(var n in roles){
  console.log('object => ', n, 'value => ', roles[n]);
}


pm2  사용법
pm2 start main.js --watch --ignore-watch="data/*"--no-daemon

자바스크립트 SQL보안
자바스크립트에서 SQL문을 사용할 때는, 사용자에게 입력받을 값을 쿼리문 안에?를 넣고, 그 후 넘겨주어 사용해야 한다.
예시
db.query(`UPDATE topic SET title=?,description=?,author_id=?,created=NOW() WHERE id = ?`, [title, description,post.author,post.id], function (error, result)
위처럼 받고 싶은 입력값에 ?를 넣고, 그 다음 파라미터로 입력할 값의 객체를 생서하여 전달한다.

자바스크립트 escape 보안
sanitizeHTML
var sanitizeHtml = require('sanitize-html');
${sanitizeHtml(topic[0].name)}
처럼 살균할 데이터를 파라미터로 넘겨서 사용


